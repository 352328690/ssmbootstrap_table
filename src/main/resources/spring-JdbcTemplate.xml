<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}"></property>
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<property name="minIdle" value="${jdbc.minIdle}"></property>
		<property name="maxWait" value="${jdbc.maxWait}"></property>
		<!-- 用来检测连接是否有效的sql，要求是一个查询语句 -->
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
				  value="20" />
		<!-- 配置监控统计拦截的filters,wall-sql防火墙支持 -->
		<property name="filters" value="stat,wall" />
	</bean>

	<!-- jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="logDataSource" />
		<property name="fetchSize" value="30" />
	</bean>

	<!-- namedParameterJdbcTemplate -->
	<bean id="namedParameterJdbcTemplate"
		  class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="logDataSource"></constructor-arg>
	</bean>

	<!-- spring方法调用监控 -->
	<bean id="druid-stat-interceptor"
		  class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"></bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
		  scope="prototype">
		<property name="patterns">
			<list>
				<value>cn.com.ttblog.ssmbootstrap_table.service.*</value>
				<value>cn.com.ttblog.ssmbootstrap_table.dao.*</value>
			</list>
		</property>
	</bean>

	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor"
					 pointcut-ref="druid-stat-pointcut" />
	</aop:config>

	<!-- 声明式事务配置 -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="logDataSource"></property>
	</bean>
	<tx:advice id="trasactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut
				expression="execution(* cn.com.ttblog.ssmbootstrap_table.serviceimpl.*.*(..))"
				id="trasactionService" />
		<aop:advisor pointcut-ref="trasactionService" advice-ref="trasactionAdvice" />
	</aop:config>

	<bean id="logDataSource" class="net.sf.log4jdbc.sql.jdbcapi.DataSourceSpy">
		<constructor-arg ref="dataSource" />
	</bean>

	<!-- 配置数据库连接池、数据源 -->
	<beans profile="develop">
		<context:property-placeholder location="classpath:jdbc.properties" />
	</beans>
	<beans profile="production">
		<context:property-placeholder location="classpath:jdbc-production.properties" />
	</beans>
</beans>