<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
         http://www.springframework.org/schema/tx 
         http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<description>Shiro安全配置</description>
<!-- 	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager" /> -->
	<bean id="urlPermissionResolver" class="cn.com.ttblog.ssmbootstrap_table.shiro.UrlPermissionResovler" />
<!-- 	http://jinnianshilongnian.iteye.com/blog/2021439 shiro密码加密解密 -->
	<bean id="hashMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5" />
	</bean>
	
	<bean id="userRealm" class="cn.com.ttblog.ssmbootstrap_table.shiro.realm.UserRealm">
		<property name="cachingEnabled" value="true" />
		<property name="authenticationCachingEnabled" value="true" />
		<property name="authenticationCacheName" value="shiro-authenticationCache" />
		<property name="authorizationCachingEnabled" value="true" />
		<property name="authorizationCacheName" value="shiro-authorizationCache" />
		<property name="credentialsMatcher" ref="hashMatcher" />
	</bean>
	
	<!-- 用户Session信息DAO, 采用EhCache -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
	</bean>
	
	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,当跳出SHIRO 
		SERVLET时如ERROR-PAGE 容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="shiroSessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		 <constructor-arg name="name" value="SSESSIONID" />
	</bean>
	
	<!-- 使用默认session管理类 -->
	<bean id="defaultWebSessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="globalSessionTimeout" value="3600000" />
		<property name="sessionIdCookie" ref="shiroSessionIdCookie" />
	</bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm" />
<!-- 		<property name="cacheManager" ref="cacheManager" /> -->
		<property name="authorizer.permissionResolver" ref="urlPermissionResolver" />
		<!-- 默认session管理类 -->
		<property name="sessionManager" ref="defaultWebSessionManager" />
	</bean>

	<bean id="resourceCheckFilter" class="cn.com.ttblog.ssmbootstrap_table.shiro.ResourceCheckFilter">
		<property name="errorUrl" value="/unauth.jsp" />
	</bean>
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<!-- override these for application-specific URLs if you like:  -->
		<property name="successUrl" value="/index.jsp"/> 
		<property name="unauthorizedUrl" value="/unauth.jsp"/>
		<!-- The 'filters' property is not necessary since any declared javax.servlet.Filter 
			bean -->
		<!-- defined will be automatically acquired and available via its beanName 
			in chain -->
		<!-- definitions, but you can perform instance overrides or name aliases 
			here if you like: -->
		<!-- <property name="filters"> <util:map> <entry key="anAlias" value-ref="someFilter"/> 
			</util:map> </property> -->
		<property name="filterChainDefinitions">
			<value>
				/=anon
				/unauth.jsp=anon
				/favicon.ico=anon
				/css/**=anon
				/image/**=anon
				/js/**=anon
				/admin/**=authc,resourceCheckFilter
				/login=cfauth
				/test/jcaptcha=anon
				/logout = logout
				/index.html=anon
				/register=anon
				/captcha=anon
				/jsonp=anon
				/** = resourceCheckFilter
			</value>
		</property>
	</bean>
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>